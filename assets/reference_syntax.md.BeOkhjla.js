import{_ as s,c as e,o as n,ag as t}from"./chunks/framework.C8hRoDJf.js";const u=JSON.parse('{"title":"Syntax Reference","description":"","frontmatter":{},"headers":[],"relativePath":"reference/syntax.md","filePath":"reference/syntax.md"}'),i={name:"reference/syntax.md"};function l(o,a,p,c,d,r){return n(),e("div",null,a[0]||(a[0]=[t(`<h1 id="syntax-reference" tabindex="-1">Syntax Reference <a class="header-anchor" href="#syntax-reference" aria-label="Permalink to &quot;Syntax Reference&quot;">​</a></h1><p>This page details the complete syntax specification for SSAL.</p><h2 id="comments" tabindex="-1">Comments <a class="header-anchor" href="#comments" aria-label="Permalink to &quot;Comments&quot;">​</a></h2><p>Single-line comments start with <code>#</code>:</p><div class="language-ssal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># This is a comment</span></span>
<span class="line"><span>task build:  # This is also a comment</span></span>
<span class="line"><span>    run &quot;gcc main.c&quot;</span></span></code></pre></div><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><h3 id="declaration" tabindex="-1">Declaration <a class="header-anchor" href="#declaration" aria-label="Permalink to &quot;Declaration&quot;">​</a></h3><p>Variables are declared using the <code>var</code> keyword:</p><div class="language-ssal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var NAME = &quot;value&quot;</span></span>
<span class="line"><span>var VERSION = &quot;1.0.0&quot;</span></span>
<span class="line"><span>var COMPILER = &quot;gcc&quot;</span></span></code></pre></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><p>Reference variables using <code>$</code>:</p><div class="language-ssal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>task build:</span></span>
<span class="line"><span>    run &quot;$COMPILER main.c -o $OUTPUT&quot;</span></span></code></pre></div><h2 id="tasks" tabindex="-1">Tasks <a class="header-anchor" href="#tasks" aria-label="Permalink to &quot;Tasks&quot;">​</a></h2><p>Tasks are the primary unit of work in SSAL:</p><div class="language-ssal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>task taskname:</span></span>
<span class="line"><span>    command1</span></span>
<span class="line"><span>    command2</span></span>
<span class="line"><span>    command3</span></span></code></pre></div><h3 id="task-dependencies" tabindex="-1">Task Dependencies <a class="header-anchor" href="#task-dependencies" aria-label="Permalink to &quot;Task Dependencies&quot;">​</a></h3><p>Tasks can depend on other tasks:</p><div class="language-ssal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>task test: build</span></span>
<span class="line"><span>    run &quot;./runtests&quot;</span></span></code></pre></div><h2 id="commands" tabindex="-1">Commands <a class="header-anchor" href="#commands" aria-label="Permalink to &quot;Commands&quot;">​</a></h2><h3 id="built-in-commands" tabindex="-1">Built-in Commands <a class="header-anchor" href="#built-in-commands" aria-label="Permalink to &quot;Built-in Commands&quot;">​</a></h3><ol><li><code>run</code>: Execute shell commands</li></ol><div class="language-ssal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>run &quot;npm install&quot;</span></span></code></pre></div><ol start="2"><li><code>ech</code>: Print to console</li></ol><div class="language-ssal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ech &quot;Building project...&quot;</span></span></code></pre></div><ol start="3"><li><code>delete</code>: Remove files</li></ol><div class="language-ssal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>delete &quot;build/&quot;</span></span></code></pre></div><ol start="4"><li><code>tsk</code>: Invoke another task</li></ol><div class="language-ssal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tsk &quot;task_name&quot;</span></span></code></pre></div><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li>Use descriptive task names</li><li>Comment complex operations</li><li>Keep tasks focused and single-purpose</li><li>Use variables for reusable values</li></ol>`,30)]))}const m=s(i,[["render",l]]);export{u as __pageData,m as default};
